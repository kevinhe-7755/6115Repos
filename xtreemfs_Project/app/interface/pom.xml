<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.xtreemfs.xtreemfs</groupId>
  <artifactId>xtreemfs-interface-cpp</artifactId>
  <version>1.6.0-SNAPSHOT</version>

  <properties>
    <!-- Plugin configurations. -->
    <exec-maven-plugin.version>1.5.0</exec-maven-plugin.version>
    <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
    <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
    <protobuf-java.version>2.6.1</protobuf-java.version>
    <protoc.bin>${project.basedir}/../cpp/thirdparty/protobuf-${protobuf-java.version}/src/protoc</protoc.bin>
    <protoc.include>${project.basedir}/../cpp/thirdparty/protobuf-${protobuf-java.version}/src</protoc.include>
    <protoc-plugin.suffix></protoc-plugin.suffix>
  </properties>

  <profiles>
    <profile>
      <id>win</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <os>
          <family>windows</family>
        </os>
      </activation>

      <!-- Provide alternative protoc location if on Windows -->
      <properties>
        <protoc.bin>${project.basedir}/../cpp/thirdparty/protobuf-${protobuf-java.version}/vsprojects/Release/protoc</protoc.bin>
        <protoc-plugin.suffix>.bat</protoc-plugin.suffix>
      </properties>

      <build>
      <plugins>
        <!-- Create Windows-specific plugin for protoc. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
          <executions>
            <execution>
              <phase>generate-sources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target>
                  <echo file="${project.build.directory}/protoc-gen-pbrpccpp.bat" message="@java -cp" />
                  <echo file="${project.build.directory}/protoc-gen-pbrpccpp.bat" append="true" message=" &quot;${maven.dependency.org.xtreemfs.xtreemfs.xtreemfs-pbrpcgen.jar.path}" />
                  <echo file="${project.build.directory}/protoc-gen-pbrpccpp.bat" append="true" message="${path.separator}${maven.dependency.com.google.protobuf.protobuf-java.jar.path}&quot;" />
                  <echo file="${project.build.directory}/protoc-gen-pbrpccpp.bat" append="true" message=" org.xtreemfs.pbrpcgen.RPCCPPSourceGenerator${line.separator}" />
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf-java.version}</version>
    </dependency>

    <dependency>
      <groupId>org.xtreemfs.xtreemfs</groupId>
      <artifactId>xtreemfs-pbrpcgen</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Create plugin for protoc. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo file="${project.build.directory}/protoc-gen-pbrpccpp" message="#!/bin/bash${line.separator}" />
                <echo file="${project.build.directory}/protoc-gen-pbrpccpp" append="true" message="java -cp" />
                <!-- ${maven.dependency.groupId.artifactId.jar.path} is only available in maven-antrun-plugin -->
                <echo file="${project.build.directory}/protoc-gen-pbrpccpp" append="true" message=" &quot;${maven.dependency.org.xtreemfs.xtreemfs.xtreemfs-pbrpcgen.jar.path}" />
                <echo file="${project.build.directory}/protoc-gen-pbrpccpp" append="true" message="${path.separator}${maven.dependency.com.google.protobuf.protobuf-java.jar.path}&quot;" />
                <echo file="${project.build.directory}/protoc-gen-pbrpccpp" append="true" message=" org.xtreemfs.pbrpcgen.RPCCPPSourceGenerator${line.separator}" />
                <chmod file="${project.build.directory}/protoc-gen-pbrpccpp" perm="a+x" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <executions>
          <!-- Invoke protoc to generate CPP sources. -->
          <execution>
            <id>generate-common</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${protoc.bin}</executable>
              <workingDirectory>${project.basedir}/../interface</workingDirectory>
              <arguments>
                <argument>--proto_path=${project.basedir}/../interface</argument>
                <argument>--proto_path=${project.basedir}/../interface/include</argument>
                <argument>--proto_path=${protoc.include}</argument>
                <argument>--cpp_out=${project.basedir}/../cpp/generated</argument>
                <argument>${project.basedir}/../interface/include/Common.proto</argument>
                <argument>${project.basedir}/../interface/include/PBRPC.proto</argument>
              </arguments>
            </configuration>
          </execution>

          <execution>
            <id>generate-pbrpc</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${protoc.bin}</executable>
              <workingDirectory>${project.basedir}/../interface</workingDirectory>
              <arguments>
                <argument>--proto_path=${project.basedir}/../interface</argument>
                <argument>--proto_path=${project.basedir}/../interface/pbrpc</argument>
                <argument>--proto_path=${protoc.include}</argument>
                <argument>--cpp_out=${project.basedir}/../cpp/generated</argument>
                <argument>${project.basedir}/../interface/pbrpc/Ping.proto</argument>
                <argument>${project.basedir}/../interface/pbrpc/RPC.proto</argument>
              </arguments>
            </configuration>
          </execution>

          <execution>
            <id>generate-xtreemfs</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${protoc.bin}</executable>
              <workingDirectory>${project.basedir}/../interface</workingDirectory>
              <arguments>
                <argument>--proto_path=${project.basedir}/../interface</argument>
                <argument>--proto_path=${project.basedir}/../interface/xtreemfs</argument>
                <argument>--proto_path=${protoc.include}</argument>
                <argument>--cpp_out=${project.basedir}/../cpp/generated</argument>
                <argument>${project.basedir}/../interface/xtreemfs/GlobalTypes.proto</argument>
                <argument>${project.basedir}/../interface/xtreemfs/DIR.proto</argument>
                <argument>${project.basedir}/../interface/xtreemfs/MRC.proto</argument>
                <argument>${project.basedir}/../interface/xtreemfs/OSD.proto</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Invoke protoc again, this time with our plugin to generate custom classes. -->
          <execution>
            <id>generate-pbrpc-pbrpc</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${protoc.bin}</executable>
              <workingDirectory>${project.basedir}/../interface</workingDirectory>
              <arguments>
                <argument>--proto_path=${project.basedir}/../interface</argument>
                <argument>--proto_path=${project.basedir}/../interface/pbrpc</argument>
                <argument>--proto_path=${protoc.include}</argument>
                <argument>--pbrpccpp${protoc-plugin.suffix}_out=${project.basedir}/../cpp/generated</argument>
                <argument>--plugin=${project.build.directory}/protoc-gen-pbrpccpp${protoc-plugin.suffix}</argument>
                <argument>${project.basedir}/../interface/pbrpc/Ping.proto</argument>
                <argument>${project.basedir}/../interface/pbrpc/RPC.proto</argument>
              </arguments>
            </configuration>
          </execution>

          <execution>
            <id>generate-pbrpc-xtreemfs</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${protoc.bin}</executable>
              <workingDirectory>${project.basedir}/../interface</workingDirectory>
              <arguments>
                <argument>--proto_path=${project.basedir}/../interface</argument>
                <argument>--proto_path=${project.basedir}/../interface/xtreemfs</argument>
                <argument>--proto_path=${protoc.include}</argument>
                <argument>--pbrpccpp${protoc-plugin.suffix}_out=${project.basedir}/../cpp/generated</argument>
                <argument>--plugin=${project.build.directory}/protoc-gen-pbrpccpp${protoc-plugin.suffix}</argument>
                <argument>${project.basedir}/../interface/xtreemfs/GlobalTypes.proto</argument>
                <argument>${project.basedir}/../interface/xtreemfs/DIR.proto</argument>
                <argument>${project.basedir}/../interface/xtreemfs/MRC.proto</argument>
                <argument>${project.basedir}/../interface/xtreemfs/OSD.proto</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Clean up generated code during mvn clean. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>../cpp/generated/include</directory>
            </fileset>
            <fileset>
              <directory>../cpp/generated/pbrpc</directory>
            </fileset>
            <fileset>
              <directory>../cpp/generated/xtreemfs</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
